<?php

namespace Security\CodeAnalyzer\Vulnerability;

/**
 * Abstract base class for all vulnerability types.
 */
abstract class AbstractVulnerability implements VulnerabilityInterface
{
    /**
     * @var string
     */
    protected string $filePath;

    /**
     * @var int
     */
    protected int $lineNumber;

    /**
     * @var string
     */
    protected string $codeSnippet;

    /**
     * @var string
     */
    protected string $severity;

    /**
     * AbstractVulnerability constructor.
     *
     * @param string $filePath
     * @param int $lineNumber
     * @param string $codeSnippet
     * @param string $severity
     */
    public function __construct(
        string $filePath,
        int $lineNumber,
        string $codeSnippet,
        string $severity = 'medium'
    ) {
        $this->filePath = $filePath;
        $this->lineNumber = $lineNumber;
        $this->codeSnippet = $codeSnippet;
        $this->severity = $severity;
    }

    /**
     * {@inheritdoc}
     */
    public function getFilePath(): string
    {
        return $this->filePath;
    }

    /**
     * {@inheritdoc}
     */
    public function getLineNumber(): int
    {
        return $this->lineNumber;
    }

    /**
     * {@inheritdoc}
     */
    public function getCodeSnippet(): string
    {
        return $this->codeSnippet;
    }

    /**
     * {@inheritdoc}
     */
    public function getSeverity(): string
    {
        return $this->severity;
    }

    /**
     * {@inheritdoc}
     */
    abstract public function getType(): string;

    /**
     * {@inheritdoc}
     */
    abstract public function getDescription(): string;

    /**
     * {@inheritdoc}
     */
    abstract public function getSuggestion(): string;
}
