<?php

namespace Security\CodeAnalyzer\Vulnerability;

/**
 * Represents a SQL Injection vulnerability.
 */
class SQLInjectionVulnerability extends AbstractVulnerability
{
    /**
     * {@inheritdoc}
     */
    public function getType(): string
    {
        return 'SQL Injection';
    }

    /**
     * {@inheritdoc}
     */
    public function getDescription(): string
    {
        return 'SQL Injection vulnerability detected. User input is directly used in SQL queries without proper sanitization, ' .
               'which could allow attackers to manipulate the query and access, modify, or delete data in the database.';
    }

    /**
     * {@inheritdoc}
     */
    public function getSuggestion(): string
    {
        return 'Use prepared statements with parameterized queries instead of concatenating user input directly into SQL queries. ' .
               'For example, replace: ' .
               '$query = "SELECT * FROM users WHERE username = \'" . $username . "\'"; ' .
               'with: ' .
               '$stmt = $pdo->prepare("SELECT * FROM users WHERE username = :username"); ' .
               '$stmt->execute([":username" => $username]);';
    }
}
